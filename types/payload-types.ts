/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "featured-projects".
 */
export interface FeaturedProject {
	id: string;
	projects?: string[] | Project[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
	id: string;
	title: string;
	slug: string;
	shortDescription: string;
	description: {
		[k: string]: unknown;
	}[];
	organizer: string | Guild;
	status: 'draft' | 'ongoing' | 'past';
	links: {
		name: string;
		url: string;
		id?: string;
	}[];
	media: {
		type: 'image' | 'video';
		media?: string | Media;
		url?: string;
		id?: string;
	}[];
	date: string;
	image: string | Media;
	ogImage?: string | Media;
	'submission-url'?: string;
	collaborators?: string[] | User[];
	flags?: string[] | Flag[];
	devprops: {
		key: string;
		value: string;
		id?: string;
	}[];
	_status?: 'draft' | 'published';
	createdAt: string;
	updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guilds".
 */
export interface Guild {
	id: string;
	name: string;
	description: string;
	debutDate: string;
	invite: string;
	icon: string | Media;
	color?: string;
	staff?: string[] | User[];
	_status?: 'draft' | 'published';
	createdAt: string;
	updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
	id: string;
	prefix?: string;
	url?: string;
	filename?: string;
	mimeType?: string;
	filesize?: number;
	width?: number;
	height?: number;
	sizes: {
		icon: {
			url?: string;
			width?: number;
			height?: number;
			mimeType?: string;
			filesize?: number;
			filename?: string;
		};
		opengraph: {
			url?: string;
			width?: number;
			height?: number;
			mimeType?: string;
			filesize?: number;
			filename?: string;
		};
		thumbnail: {
			url?: string;
			width?: number;
			height?: number;
			mimeType?: string;
			filesize?: number;
			filename?: string;
		};
	};
	createdAt: string;
	updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
	id: string;
	name: string;
	roles: ('superadmin' | 'project-owner' | 'content-moderator' | 'developer' | 'translator')[];
	enableAPIKey?: boolean;
	apiKey?: string;
	apiKeyIndex?: string;
	email?: string;
	resetPasswordToken?: string;
	resetPasswordExpiration?: string;
	_verified?: boolean;
	_verificationToken?: string;
	loginAttempts?: number;
	lockUntil?: string;
	createdAt: string;
	updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "flags".
 */
export interface Flag {
	id: string;
	code: string;
	name: string;
	createdAt: string;
	updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notice".
 */
export interface Notice {
	id: string;
	enabled?: boolean;
	description?: string;
	message?: {
		[k: string]: unknown;
	}[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "submission-media".
 */
export interface SubmissionMedia {
	id: string;
	prefix?: string;
	url?: string;
	filename?: string;
	mimeType?: string;
	filesize?: number;
	width?: number;
	height?: number;
	sizes: {
		icon: {
			url?: string;
			width?: number;
			height?: number;
			mimeType?: string;
			filesize?: number;
			filename?: string;
		};
		thumbnail: {
			url?: string;
			width?: number;
			height?: number;
			mimeType?: string;
			filesize?: number;
			filename?: string;
		};
		tanabata: {
			url?: string;
			width?: number;
			height?: number;
			mimeType?: string;
			filesize?: number;
			filename?: string;
		};
	};
	createdAt: string;
	updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "submissions".
 */
export interface Submission {
	id: string;
	project: string | Project;
	author: string;
	srcIcon?: string | SubmissionMedia;
	type: 'text' | 'image' | 'video';
	subtype?: 'artwork' | 'picture' | 'other';
	message?: string;
	media?: string | SubmissionMedia;
	url?: string;
	devprops: {
		key: string;
		value: string;
		id?: string;
	}[];
	_status?: 'draft' | 'published';
	createdAt: string;
	updatedAt: string;
}
